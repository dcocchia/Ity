{
  "version": 3,
  "sources": ["../Ity.ts"],
  "sourcesContent": [
    "// Ity.ts 1.0.0\n// (c) 2025 Dominic Cocchiarella\n// Converted to TypeScript\ndeclare var define: any;\ndeclare var module: any;\n\nconst Ity: any = (function (window: any) {\n  const Ity: any = { version: \"1.0.0\" };\n\n  const regexps = {\n    rclass: /[\\t\\r\\n\\f]/g,\n    rnotwhite: /\\S/,\n    nospaces: /^\\S*$/\n  } as const;\n\n  class SelectorObject {\n    [index: number]: HTMLElement;\n    public readonly isSelectorObject = true;\n    private nodes: HTMLElement[] = [];\n\n    constructor(nodeList: ArrayLike<HTMLElement> = []) {\n      this.nodes = Array.from(nodeList as HTMLElement[]);\n      this.nodes.forEach((n, i) => ((this as any)[i] = n));\n    }\n\n    get length(): number {\n      return this.nodes.length;\n    }\n\n    [Symbol.iterator](): Iterator<HTMLElement> {\n      return this.nodes[Symbol.iterator]();\n    }\n\n    find(selector: string): SelectorObject {\n      const nodeList: HTMLElement[] = [];\n      for (const node of this.nodes) {\n        const list = node.querySelectorAll(selector);\n        for (const thisNode of Array.from(list)) {\n          const elm = thisNode as HTMLElement;\n          if (nodeList.indexOf(elm) < 0) {\n            nodeList.push(elm);\n          }\n        }\n      }\n      return new SelectorObject(nodeList);\n    }\n\n    filter(selector: string): SelectorObject {\n      const nodeList: HTMLElement[] = [];\n      for (const node of this.nodes) {\n        if (node.matches(selector)) {\n          nodeList.push(node);\n        }\n      }\n      return new SelectorObject(nodeList);\n    }\n\n    first(): SelectorObject {\n      return new SelectorObject(this[0] ? [this[0]] : []);\n    }\n\n    last(): SelectorObject {\n      return new SelectorObject(this.length ? [this[this.length - 1]] : []);\n    }\n\n    parent(): SelectorObject {\n      const nodeList: HTMLElement[] = [];\n      for (const node of this.nodes) {\n        const parent = node.parentElement;\n        if (parent && nodeList.indexOf(parent) < 0) {\n          nodeList.push(parent);\n        }\n      }\n      return new SelectorObject(nodeList);\n    }\n\n    children(selector?: string): SelectorObject {\n      const nodeList: HTMLElement[] = [];\n      for (const node of this.nodes) {\n        const children = Array.from(node.children) as HTMLElement[];\n        for (const child of children) {\n          if (nodeList.indexOf(child) < 0 && (!selector || child.matches(selector))) {\n            nodeList.push(child);\n          }\n        }\n      }\n      return new SelectorObject(nodeList);\n    }\n\n    remove(): SelectorObject {\n      for (const node of this.nodes) {\n        if (node.parentElement) {\n          node.parentElement.removeChild(node);\n        }\n      }\n      return new SelectorObject([]);\n    }\n\n    addClass(...classes: string[]): this {\n      for (const node of this.nodes) {\n        node.classList.add(...classes);\n      }\n      return this;\n    }\n\n    removeClass(value: string): this {\n      if (value && regexps.nospaces.test(value)) {\n        for (const node of this.nodes) {\n          if (node.classList.contains(value)) {\n            node.classList.remove(value);\n          }\n        }\n      }\n      return this;\n    }\n\n    toggleClass(value: string): this {\n      if (value && regexps.nospaces.test(value)) {\n        for (const node of this.nodes) {\n          node.classList.toggle(value);\n        }\n      }\n      return this;\n    }\n\n    hasClass(value: string): boolean {\n      if (!(value && regexps.nospaces.test(value))) return false;\n      for (const node of this.nodes) {\n        if (node.classList.contains(value)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    before(content: string | SelectorObject | HTMLElement): this {\n      return this._html(content, 'beforebegin');\n    }\n\n    after(content: string | SelectorObject | HTMLElement): this {\n      return this._html(content, 'afterend');\n    }\n\n    append(content: string | SelectorObject | HTMLElement): this {\n      return this._html(content, 'beforeend');\n    }\n\n    prepend(content: string | SelectorObject | HTMLElement): this {\n      return this._html(content, 'afterbegin');\n    }\n\n    html(content: string | SelectorObject | HTMLElement): this {\n      return this._html(content, 'replace');\n    }\n\n    private _html(content: string | SelectorObject | HTMLElement, position: InsertPosition | 'replace'): this {\n      const isSelectorObject = (content as any).isSelectorObject === true;\n      for (const node of this.nodes) {\n        if (!isSelectorObject) {\n          const html = (content as HTMLElement).outerHTML ?? String(content);\n          if (position === 'replace') {\n            node.innerHTML = html;\n          } else {\n            node.insertAdjacentHTML(position as InsertPosition, html);\n          }\n        } else {\n          const htmls = Array.from(content as SelectorObject).map((selNode) => selNode.outerHTML);\n          if (position === 'replace') {\n            node.innerHTML = htmls.join('');\n          } else {\n            for (const html of htmls) {\n              node.insertAdjacentHTML(position as InsertPosition, html);\n            }\n          }\n        }\n      }\n      return this;\n    }\n  }\n  function onDOMReady(fn: (...args: any[]) => void, args: unknown[] = [], context: any = Ity): void {\n    const func = () => fn.apply(context, args);\n    if (document.readyState !== 'loading') {\n      func();\n    } else {\n      document.addEventListener('DOMContentLoaded', func);\n    }\n  }\n\n  interface EventRecord { callback: (data?: unknown) => void; ctx: any; }\n\n  class Model<T extends Record<string, unknown> = Record<string, unknown>> {\n    public id!: string;\n    public data!: T;\n    public url!: string;\n    private _events!: Record<string, EventRecord[]>;\n\n    constructor(opts: Partial<Model<T>> = {}) {\n      Object.assign(this, opts);\n      this.id || (this.id = `m${Math.floor(Math.random() * 100000) + 1}`);\n      this._events || (this._events = {});\n      this.data || (this.data = {} as T);\n      this.url || (this.url = \"\");\n      this._init(opts);\n    }\n\n    onDOMReady = onDOMReady;\n\n    protected _init(opts?: Partial<Model<T>>): void {\n      this.initialize(opts);\n    }\n\n    protected _ajax(opts: {\n      url?: string;\n      type?: string;\n      success?: (resp: any) => void;\n      error?: (status?: number) => void;\n    } = {}): void {\n      const model = this;\n      const request = new XMLHttpRequest();\n      opts.url ||= this.url;\n      opts.type ||= 'GET';\n      opts.success ||= function (this: Model<T>, resp: any) { this.data = resp; };\n      opts.error ||= function () {};\n      request.open(opts.type!, opts.url!, true);\n      request.onload = function () {\n        if (request.status >= 200 && request.status < 400) {\n          const resp = JSON.parse(request.responseText);\n          opts.success!.call(model, resp);\n        } else {\n          opts.error!.call(model, request.status);\n        }\n      };\n      request.onerror = function () {\n        opts.error!.call(model);\n      };\n      request.send();\n    }\n\n    initialize(options?: Partial<Model<T>>): void {}\n\n    get(attr?: keyof T): any {\n      if (!attr) return this.data;\n      return this.data ? (this.data as any)[attr as string] : undefined;\n    }\n\n    set(attr: keyof T | Partial<T>, value?: any): void {\n      if (typeof attr === \"string\") {\n        (this.data as any)[attr] = value;\n      } else if (typeof attr === \"object\") {\n        this.data = attr as T;\n      }\n      this.trigger(\"change\", this.data);\n    }\n\n    unSet(attr: keyof T): void {\n      if (this.data && Object.prototype.hasOwnProperty.call(this.data, attr)) {\n        delete (this.data as any)[attr];\n        this.trigger(\"change\", this.data);\n      }\n    }\n\n    clear(): void {\n      this.data = {} as T;\n      this.trigger(\"change\", this.data);\n    }\n\n    on(evtName: string, callback: (data?: unknown) => void, context: any = this): void {\n      (this._events[evtName] ||= []).push({ callback, ctx: context });\n    }\n\n    off(evtName?: string, callback?: (data?: unknown) => void, context?: any): void {\n      if (!evtName) {\n        this._events = {};\n        return;\n      }\n      const events = this._events[evtName];\n      if (!events) return;\n      if (!callback) {\n        delete this._events[evtName];\n        return;\n      }\n      for (let i = events.length - 1; i >= 0; i--) {\n        const evt = events[i];\n        if (evt.callback === callback && (context === undefined || evt.ctx === context)) {\n          events.splice(i, 1);\n        }\n      }\n      if (events.length === 0) delete this._events[evtName];\n    }\n\n    sync(opts?: Parameters<Model<T>[\"_ajax\"]>[0]): void {\n      this._ajax(opts);\n    }\n\n    trigger(evtName: string, data?: unknown): void {\n      const evts = this._events[evtName];\n      if (evts) {\n        for (const evt of evts) {\n          evt.callback.call(evt.ctx, data);\n        }\n      }\n    }\n  }\n  interface ViewEvents { [selector: string]: Record<string, string>; }\n  interface ViewOptions {\n    el?: string | SelectorObject | NodeList | HTMLElement;\n    app?: Application;\n    name?: string;\n    events?: ViewEvents;\n  }\n\n  class View {\n    public id!: string;\n    public el!: SelectorObject;\n    public app?: Application;\n    public name?: string;\n    public events!: ViewEvents;\n    private _events!: Record<string, EventRecord[]>;\n\n    constructor(opts: ViewOptions = {}) {\n      Object.assign(this, opts);\n      this.id || (this.id = `v${Math.floor(Math.random() * 100000) + 1}`);\n      if (this.app) this.app.addView(this);\n      this._events || (this._events = {});\n      this.events || (this.events = {});\n      onDOMReady(this._init, [opts], this);\n    }\n\n    private _setElement(elSelector: ViewOptions[\"el\"]): void {\n      if ((elSelector as SelectorObject)?.isSelectorObject) {\n        this.el = elSelector as SelectorObject;\n      } else if (elSelector instanceof NodeList) {\n        this.el = new SelectorObject(elSelector as any);\n      } else if (typeof elSelector === \"string\") {\n        this.el = new SelectorObject(window.document.querySelectorAll(elSelector));\n      } else if (elSelector instanceof HTMLElement) {\n        this.el = new SelectorObject([elSelector]);\n      } else {\n        throw new Error(\"el selector must be of type String, NodeList, HTMLElement or Ity.SelectorObject\");\n      }\n    }\n\n    private _bindDOMEvents(evtObj: ViewEvents): void {\n      if (!this.el || !this.el.isSelectorObject) return;\n      const captureEvents = [\"focus\", \"blur\"];\n      for (const selector in evtObj) {\n        for (const evt in evtObj[selector]) {\n          const callback = (this as any)[evtObj[selector][evt]];\n          const capture = captureEvents.includes(evt);\n          this._delegateEvent(selector, evt, callback, capture);\n        }\n      }\n    }\n\n    private _delegateEvent(selector: string, evtName: string, callback: (e: Event) => void, capture = false): void {\n      for (const root of this.el) {\n        root.addEventListener(evtName, (e: Event) => {\n          let node: HTMLElement | null = e.target as HTMLElement;\n          while (node) {\n            if ((node as any).matches && (node as any).matches(selector)) {\n              callback.call(this, e);\n              break;\n            }\n            if (node === root) break;\n            node = node.parentElement;\n          }\n        }, capture);\n      }\n    }\n\n    private _init(opts: ViewOptions): void {\n      if (this.el) this._setElement(this.el);\n      this._bindDOMEvents(this.events);\n      this.initialize(opts);\n    }\n\n    initialize(opts?: ViewOptions): void {}\n\n    getName(): string | undefined {\n      return this.name;\n    }\n\n    get(attr: keyof this): any {\n      return (this as any)[attr];\n    }\n\n    set(attr: keyof this, value: any): void {\n      (this as any)[attr] = value;\n    }\n\n    on(evtName: string, callback: (data?: unknown) => void, context: any = this): void {\n      (this._events[evtName] ||= []).push({ callback, ctx: context });\n    }\n\n    off(evtName?: string, callback?: (data?: unknown) => void, context?: any): void {\n      if (!evtName) {\n        this._events = {};\n        return;\n      }\n      const events = this._events[evtName];\n      if (!events) return;\n      if (!callback) {\n        delete this._events[evtName];\n        return;\n      }\n      for (let i = events.length - 1; i >= 0; i--) {\n        const evt = events[i];\n        if (evt.callback === callback && (context === undefined || evt.ctx === context)) {\n          events.splice(i, 1);\n        }\n      }\n      if (events.length === 0) delete this._events[evtName];\n    }\n\n    remove(): void {\n      this.el.remove();\n      if (this.app) this.app.removeView(this.id);\n    }\n\n    trigger(evtName: string, data?: unknown): void {\n      const evts = this._events[evtName];\n      if (evts) {\n        for (const evt of evts) {\n          evt.callback.call(evt.ctx, data);\n        }\n      }\n    }\n\n    select(selector: string, ctx: HTMLElement | HTMLDocument | SelectorObject = this.el): SelectorObject {\n      if (ctx instanceof HTMLElement || ctx instanceof HTMLDocument) {\n        return new SelectorObject(ctx.querySelectorAll(selector));\n      } else if ((ctx as any).isSelectorObject) {\n        return (ctx as SelectorObject).find(selector);\n      }\n      throw new Error('Context passed to .select() must be an HTMLElement or an Ity.SelectorObject');\n    }\n  }\n\n  class Application {\n    public views: View[] = [];\n\n    getView(id: string): View | undefined {\n      for (const view of this.views) {\n        if (view.id === id) return view;\n      }\n      return undefined;\n    }\n\n    addView(view: View): void {\n      if (view instanceof View) this.views.push(view);\n    }\n\n    removeView(id: string): void {\n      for (let i = 0; i < this.views.length; i++) {\n        if (this.views[i].id === id) {\n          this.views.splice(i, 1);\n        }\n      }\n    }\n\n    trigger(evtName: string, data?: unknown): void {\n      for (const view of this.views) {\n        view.trigger(evtName, data);\n      }\n    }\n  }\n\n  class Collection<M extends Model = Model> {\n    public models: M[] = [];\n    public url!: string;\n    private ModelClass: new () => M;\n\n    constructor(models: M[] = [], ModelClass: new () => M = Model as any) {\n      this.ModelClass = ModelClass;\n      this.url = \"\";\n      models.forEach((m) => this.add(m));\n    }\n\n    get(id: string): M | undefined {\n      for (const model of this.models) {\n        if (model.id === id) return model;\n      }\n      return undefined;\n    }\n\n    add(model: M): void {\n      if (model instanceof Model) this.models.push(model);\n    }\n\n    remove(id: string | M): void {\n      const model = typeof id === 'string' ? this.get(id) : id;\n      if (!model) return;\n      const idx = this.models.indexOf(model as M);\n      if (idx >= 0) this.models.splice(idx, 1);\n    }\n\n    at(index: number): M | undefined {\n      return this.models[index];\n    }\n\n    get length(): number {\n      return this.models.length;\n    }\n\n    clear(): void {\n      this.models = [];\n    }\n\n    find(predicate: (m: M) => boolean): M | undefined {\n      for (const m of this.models) {\n        if (predicate(m)) return m;\n      }\n      return undefined;\n    }\n\n    filter(predicate: (m: M) => boolean): M[] {\n      const out: M[] = [];\n      for (const m of this.models) {\n        if (predicate(m)) out.push(m);\n      }\n      return out;\n    }\n\n    toJSON(): any[] {\n      return this.models.map((m) => m.get());\n    }\n\n    protected _ajax(opts: {\n      url?: string;\n      type?: string;\n      success?: (resp: any) => void;\n      error?: (status?: number) => void;\n    } = {}): void {\n      const col = this;\n      const request = new XMLHttpRequest();\n      opts.url ||= this.url;\n      opts.type ||= 'GET';\n      opts.success ||= function () {};\n      opts.error ||= function () {};\n      request.open(opts.type!, opts.url!, true);\n      request.onload = function () {\n        if (request.status >= 200 && request.status < 400) {\n          const resp = JSON.parse(request.responseText);\n          opts.success!.call(col, resp);\n        } else {\n          opts.error!.call(col, request.status);\n        }\n      };\n      request.onerror = function () {\n        opts.error!.call(col);\n      };\n      request.send();\n    }\n\n    fetch(opts: Parameters<Collection<M>[\"_ajax\"]>[0] & { modelClass?: new () => M } = {}): void {\n      opts.success ||= function (this: Collection<M>, resp: any[]) {\n        const ctor = (opts.modelClass || this.ModelClass) as new () => M;\n        this.clear();\n        resp.forEach((d) => {\n          const m = new ctor();\n          (m as any).set(d);\n          this.add(m);\n        });\n      };\n      this._ajax(opts);\n    }\n\n    trigger(evtName: string, data?: unknown): void {\n      for (const model of this.models) {\n        model.trigger(evtName, data);\n      }\n    }\n  }\n\n  interface Route {\n    re: RegExp;\n    keys: string[];\n    handler: (params: Record<string, string>) => void;\n  }\n\n  class Router {\n    private routes: Route[] = [];\n    private listener: () => void;\n    private started = false;\n\n    constructor() {\n      this.listener = this._checkUrl.bind(this);\n      this.start();\n    }\n\n    addRoute(pattern: string, handler: Route[\"handler\"]): void {\n      const keys: string[] = [];\n      const re = new RegExp(\n        \"^\" +\n          pattern\n            .replace(/\\/?$/, \"\")\n            .replace(/:[^/]+/g, (m) => {\n              keys.push(m.slice(1));\n              return \"([^/]+)\";\n            }) +\n          \"/?$\"\n      );\n      this.routes.push({ re, keys, handler });\n    }\n\n    navigate(path: string): void {\n      window.history.pushState(null, \"\", path);\n      this._checkUrl();\n    }\n\n    start(): void {\n      if (!this.started) {\n        window.addEventListener(\"popstate\", this.listener);\n        this.started = true;\n      }\n      this._checkUrl();\n    }\n\n    stop(): void {\n      if (this.started) {\n        window.removeEventListener(\"popstate\", this.listener);\n        this.started = false;\n      }\n    }\n\n    private _checkUrl(): void {\n      const path = window.location.pathname.replace(/[?#].*$/, \"\").replace(/\\/?$/, \"\");\n      for (const route of this.routes) {\n        const match = route.re.exec(path);\n        if (match) {\n          const params: Record<string, string> = {};\n          route.keys.forEach((k, i) => (params[k] = match[i + 1]));\n          const collect = (str: string): void => {\n            str = str.replace(/^[?#]/, \"\");\n            if (!str) return;\n            const search = new URLSearchParams(str);\n            search.forEach((v, k) => {\n              params[k] = v;\n            });\n          };\n          collect(window.location.search);\n          collect(window.location.hash);\n          route.handler(params);\n          break;\n        }\n      }\n    }\n  }\n\n  Ity.SelectorObject = SelectorObject;\n  Ity.onDOMReady = onDOMReady;\n  Ity.Model = Model;\n  Ity.View = View;\n  Ity.Application = Application;\n  Ity.Collection = Collection;\n  Ity.Router = Router;\n\n  if (typeof define === 'function' && (define as any).amd) {\n    (define as any)(function () {\n      if (typeof window !== 'undefined') (window as any).Ity = Ity;\n      return Ity;\n    });\n  } else if (typeof module === 'object' && typeof module.exports !== 'undefined') {\n    module.exports = Ity;\n  }\n  if (typeof window !== 'undefined') {\n    (window as any).Ity = Ity;\n  }\n  return Ity;\n})(typeof window !== 'undefined' ? window : {} as any);\n\nexport default Ity;\n"
  ],
  "mappings": "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",
  "debugId": "ECF93BE92AF087F964756E2164756E21",
  "names": []
}
